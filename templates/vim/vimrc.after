"
" GUI
"
set t_Co=256
set term=screen-256color
set background=dark
color base16-ocean
set guifont=Source\ Code\ Pro\ For\ Powerline:h14
set linespace=1

"
" Editing
"
set timeoutlen=250
set relativenumber
hi CursorLineNr   term=bold ctermfg=Yellow guifg=Yellow

"
" Copy to clipboar
"
vnoremap <leader>1 "*y
nnoremap <leader>1 "*y

"
" Paste from clipboar
"
vnoremap <leader>2 "*p
nnoremap <leader>2 "*p

" Set ruler mark "
highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%80v', 100)

" FileTypes settings "
set smartindent
set ts=2 sw=2 expandtab

autocmd BufNewFile,BufRead *.yml.dist set syntax=yaml ft=yaml
autocmd BufNewFile,BufRead *.twig set syntax=jinja
autocmd BufNewFile,BufRead *.swig set syntax=jinja
autocmd BufNewFile,BufRead *.html.twig set syntax=htmljinja ft=html
autocmd BufNewFile,BufRead *.html.swig set syntax=htmljinja ft=html

autocmd Filetype html,ruby,javascript setlocal ts=2 sw=2 expandtab
autocmd Filetype php setlocal ts=4 sw=4 sts=0 expandtab
autocmd Filetype markdown setlocal ts=4 sw=4 sts=0 expandtab
autocmd Filetype json setlocal conceallevel=0 expandtab
autocmd Filetype snippets setlocal expandtab

" Move Mappings "
nnoremap <S-Down> 5j
nnoremap <S-Up> 5k
vnoremap <S-Down> 5j
vnoremap <S-Up> 5k
inoremap <S-Down> 5j
inoremap <S-Up> 5k

" Folding "
nnoremap <Space> za
vnoremap <Space> za

" Plugin mappings "
nmap <leader>f :NERDTreeFind<CR>

if filereadable(".git/config")
  let g:NERDTreeBookmarksFile = ".git/.NERDTreeBookmarks"
  call g:NERDTreeBookmark.CacheBookmarks(0)
endif

" Git "
nmap <leader>d :!git difftool -y -t Kaleidoscope<CR>

" Include unite settings"
source ~/.vim.settings/plugin.unite.vim

" Snippets "
" let g:snipMate.scope_aliases['htmljinja'] = 'html,twig,jinja'
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" Airline "
let g:airline_powerline_fonts = 1
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = '⎇ ' " 
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = ''

" dbgPamvim "
let g:dbgPavimPort = 9000
let g:dbgPavimBreakAtEntry = 0

" CtrlP "
set wildignore+=
 \*/cookbooks/*,
 \*/node_modules/*,
 \*/Symfony/vendor/*,
 \*/cache/*,
 \*/tmp/*,
 \*.so,
 \*.swp,
 \*.zip,

" neocomplete "
" https://github.com/Shougo/neocomplete.vim/blob/master/README.md "
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#sources#syntax#min_keyword_length = 2
let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'

autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

" vim-trailing-whitespace "
let g:extra_whitespace_ignored_filetypes = ['unite']

" easytags "
set tags=./tags;
set tags=.git/tags,../../.git/tags,.hg/tags,./tags,.tags;
let g:easytags_dynamic_files = 2

" php "
autocmd FileType php inoremap <C-p> <ESC>:call PhpDocSingle()<CR>i
autocmd FileType php nnoremap <C-p> :call PhpDocSingle()<CR>
autocmd FileType php vnoremap <C-p> :call PhpDocRange()<CR>
